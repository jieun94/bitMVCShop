<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="prodSelectMap" type="product">
		<result property="prodNo" 		column="prod_no" 			jdbcType="INTEGER"/>
		<result property="prodName"		column="prod_name" 			jdbcType="VARCHAR" />
		<result property="prodDetail" 	column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="manuDate" 	column="manufacture_day" 	jdbcType="VARCHAR" />
		<result property="price" 		column="price" 				jdbcType="INTEGER" />
		<result property="fileName" 	column="image_file" 		jdbcType="VARCHAR" />
		<result property="regDate" 		column="reg_date" 			jdbcType="DATE" />
		<result property="prodNum"		column="prod_num"			jdbcType="INTEGER"/>
		<result property="purchaseCount" column="count" 			javaType="INTEGER"/>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="insertProduct"		parameterType="product" >
	 	INSERT
		INTO product( prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date, prod_num) 
		VALUES	 (	seq_product_prod_no.NEXTVAL , #{prodName} , #{prodDetail:VARCHAR} , #{manuDate:VARCHAR} , #{price} , 
							#{fileName:VARCHAR} , SYSDATE, #{prodNum} )
	 </insert>
	 
	  <select id="getProdNo" resultType="int">
	 	SELECT
	 	*
	 	FROM (SELECT prod_no FROM product ORDER BY reg_date desc)
	 	WHERE rownum = 1
	 </select>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="int"	resultMap="prodSelectMap">
		SELECT
		*
		FROM product, (SELECT SUM(tran_num) count
	 					FROM transaction 
						WHERE prod_no = #{value} )
		WHERE prod_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product">
	   	UPDATE product
	   	<set>
	   		prod_name 			= #{prodName} ,
			prod_detail			= #{prodDetail:VARCHAR},
			manufacture_day 	= #{manuDate:VARCHAR} ,
			price				= #{price},
			image_file			= #{fileName:VARCHAR},
			prod_num			= #{prodNum}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProdList"  parameterType="search"	resultMap="prodSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT 
	  									DISTINCT p.* , vt.count
	  									FROM product p, transaction t, (	SELECT 
	  																		p.prod_no ,SUM(t.tran_num) count 
	  																		FROM product p, transaction t 
	  																		WHERE p.prod_no=t.prod_no(+) 
	  																		GROUP BY p.prod_no	) vt
	  									WHERE p.prod_no = t.prod_no(+) 
	  									AND vt.prod_no = p.prod_no
											<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
											 			AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
											 			AND p.prod_name LIKE '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
											 			AND p.price LIKE '%'||#{searchKeyword}||'%'
													</if>
											</if>
											<if test="orderColumn ==null">
												ORDER BY p.reg_date DESC )inner_table 
											</if>
											<if test="orderColumn =='prod_name'">
												<if test="order==1">
													ORDER BY p.prod_name DESC )inner_table 
												</if>
												<if test="order==2">
													ORDER BY p.prod_name ASC )inner_table 
												</if> 
											</if>
											<if test="orderColumn =='price'">
												<if test="order==1">
													ORDER BY p.price DESC )inner_table 
												</if>
												<if test="order==2">
													ORDER BY p.price ASC )inner_table 
												</if> 
											</if>
											<if test="orderColumn =='purchaseCount'">
												<if test="order==1">
													ORDER BY vt.count DESC NULLS LAST )inner_table 
												</if>
												<if test="order==2">
													ORDER BY vt.count ASC NULLS FIRST)inner_table 
												</if> 
											</if>
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT DISTINCT p.* 
						FROM product p, transaction t
						<if test="searchCondition != null">
							<where>
								p.prod_no = t.prod_no(+) 
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 			AND p.prod_name LIKE '%'||#{searchKeyword}||'%'
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
						 			AND p.price LIKE '%'||#{searchKeyword}||'%'
								</if>
							</where>
						</if> 
						) countTable						
	 </select>
	 
</mapper>